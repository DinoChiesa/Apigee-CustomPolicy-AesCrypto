<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ProxyEndpoint name="default">
  <Description>Default Proxy</Description>

  <HTTPProxyConnection>
    <BasePath>/aes-crypto</BasePath>
    <Properties/>
    <VirtualHost>secure</VirtualHost>
  </HTTPProxyConnection>

  <FaultRules/>

  <PreFlow>
    <Request>
    </Request>
  </PreFlow>

  <Flows>

    <Flow name="encrypt 1">
      <!--
      curl -i -H 'content-type: text/plain' -X POST \
       "https://$ORG-$ENV.apigee.net/aes-crypto/encrypt1?passphrase=Secret123" \
       -d 'The quick brown fox jumped over the lazy dog.'
      -->
      <Description>encrypt the plaintext payload using a passphrase</Description>
      <Request>
        <Step>
          <Name>RF-BadRequest</Name>
          <Condition>request.queryparam.passphrase = null</Condition>
        </Step>
        <Step>
          <Name>Java-AesEncrypt1</Name>
        </Step>
        <Step>
          <Name>RF-CryptoError</Name>
          <Condition>crypto_error != null</Condition>
        </Step>
      </Request>
      <Response>
        <Step>
          <Name>AM-SuccessEncryptResponse</Name>
        </Step>
      </Response>
      <Condition>(proxy.pathsuffix MatchesPath "/encrypt1") and (request.verb = "POST")</Condition>
    </Flow>

    <Flow name="decrypt 1">
      <!--
      curl -i -H 'content-type: text/plain' -X POST \
        "https://$ORG-$ENV.apigee.net/aes-crypto/decrypt1?passphrase=Secret123&source_encoding=base64" \
       -d 'rZjFqahLBx/RdlqkNv8QpryerhWBnUaVOfi1MzTd6MSZFGLBGLF0+TGvppIcYTSL'
      -->
      <Description>decrypt the plaintext payload using a passphrase</Description>
      <Request>
        <Step>
          <Name>RF-BadRequest</Name>
          <Condition>request.queryparam.passphrase = null</Condition>
        </Step>
        <Step>
          <Name>AV-SourceDecoding</Name>
        </Step>
        <Step>
          <Name>Java-AesDecrypt1</Name>
        </Step>
        <Step>
          <Name>RF-CryptoError</Name>
          <Condition>crypto_error != null</Condition>
        </Step>
      </Request>
      <Response>
        <Step>
          <Name>AM-SuccessDecryptResponse</Name>
        </Step>
      </Response>
      <Condition>(proxy.pathsuffix MatchesPath "/decrypt1") and (request.verb = "POST")</Condition>
    </Flow>


    <Flow name="encrypt 2">
      <!--
      curl -i -X POST https://$ORG-$ENV.apigee.net/aes-crypto/encrypt2 \
       -d 'key=2391652f01a99021d63789256e5d3d30' \
       -d 'iv=c5b4039aadf01a1da13d04570da45265' \
       -d 'cleartext=Whatever you want to encrypt goes here.'
      -->
      <Description>encrypt the plaintext payload using a key and IV</Description>
      <Request>
        <Step>
          <Name>RF-BadRequest</Name>
          <Condition>request.formparam.key = null OR request.formparam.iv = null</Condition>
        </Step>
        <Step>
          <Name>Java-AesEncrypt2</Name>
        </Step>
        <Step>
          <Name>RF-CryptoError</Name>
          <Condition>crypto_error != null</Condition>
        </Step>
      </Request>
      <Response>
        <Step>
          <Name>AM-SuccessEncryptResponse</Name>
        </Step>
      </Response>
      <Condition>(proxy.pathsuffix MatchesPath "/encrypt2") and (request.verb = "POST")</Condition>
    </Flow>

    <Flow name="decrypt 2">
      <!--
      curl -i -X POST https://$ORG-$ENV.apigee.net/aes-crypto/decrypt2 \
       -d 'key=2391652f01a99021d63789256e5d3d30' \
       -d 'iv=c5b4039aadf01a1da13d04570da45265' \
       -d 'source_decoding=base64' \
       -d 'ciphertext=cjJTqwvqlKDnX-gOSGLbVNMMKhJkD6MxfSYu7warI49Xdk17mF0ps8qfp12Xj49konM1YL5K9JC2pD3LiCHkbOpvMmnN1Rm1dgzLbSeysAPtV4FRqlX6SvTv1-7ToMeBhTVf7u5XW607umfVauUCvwqar9C7mLB4ivqW0p4RJjW5XDQzmHPI7JtO0rILsJlnXficbHsv3sh1ShR6YshgKg'
      -->
      <Description>decrypt the plaintext payload using a key and IV</Description>
      <Request>
        <Step>
          <Name>RF-BadRequest</Name>
          <Condition>request.formparam.key = null OR request.formparam.iv = null</Condition>
        </Step>
        <Step>
          <Name>Java-AesDecrypt2</Name>
        </Step>
        <Step>
          <Name>RF-CryptoError</Name>
          <Condition>crypto_error != null</Condition>
        </Step>
      </Request>
      <Response>
        <Step>
          <Name>AM-SuccessDecryptResponse</Name>
        </Step>
      </Response>
      <Condition>(proxy.pathsuffix MatchesPath "/decrypt2") and (request.verb = "POST")</Condition>
    </Flow>

    <Flow name="decrypt 3">
      <Description>decrypt the plaintext payload using a key and
      IV</Description>
      <!--
example

curl -i -X POST https://$ORG-$ENV.apigee.net/aes-crypto/decrypt3 \
 -d 'key=385f9fd4cba017c159956276036545b0' \
 -d 'iv=mRqogt0pxtPdgyjt' \
 -d 'tag=ESdhCa_eqd2FaI5e5IH2xQ' \
 -d 'aad=eyJ0eXAiOiJKV1QiLCJoZHIxIjoxMjMsImVuYyI6IkExMjhHQ00iLCJoZHIyIjp0cnVlLCJhbGciOiJSU0EtT0FFUC0yNTYifQ' \
 -d 'ciphertext=73XlhsvhcsaIFJUrqZFyf0Hjgxx9A-rbPWoIdsup-ScsXuqO6RevhNdjBg'

      -->
      <Request>
        <Step>
          <Name>RF-BadRequest</Name>
          <Condition>request.formparam.key = null OR request.formparam.iv = null</Condition>
        </Step>
        <Step>
          <Name>AV-SourceDecoding</Name>
        </Step>
        <Step>
          <Name>Java-AesDecrypt3</Name>
        </Step>
        <Step>
          <Name>RF-CryptoError</Name>
          <Condition>crypto_error != null</Condition>
        </Step>
      </Request>
      <Response>
        <Step>
          <Name>AM-SuccessDecryptResponse</Name>
        </Step>
      </Response>
      <Condition>(proxy.pathsuffix MatchesPath "/decrypt3") and (request.verb = "POST")</Condition>
    </Flow>

    <Flow name='unknown'>
      <Description>unknown request</Description>
      <Request>
        <Step>
          <Name>RF-BadRequest</Name>
        </Step>
      </Request>
    </Flow>
  </Flows>

  <RouteRule name="Loopback"/>

</ProxyEndpoint>
